method path auth data
data = ?queryStringProperty=<type>&(optional)=<type> ?alternateSyntax=<type>
data = { requestBodyProperty: <type>, (optional): <type> } { alternateSyntax: <type> }

Admin API
    [GET]
        /api/admin/transfer Admin ?uid=<user id>&project=<project id> ?uid=<id>&post=<post id>
        /api/admin/resetpassword Admin ?uid=<user id>&password=<string>
        /api/admin/reports/list Admin
    [POST]
        /api/admin/reports/create User { content: <string>, link: <string> }

Auth API
    [DELETE]
        /api/auth/deleteUser Admin { id: <user id> }
        /api/auth/deleteSelf User { confirmationPswd: <string> } 
    [GET]
        /api/auth/listUsers None ?(role)=<role>&(customQuery)=<mongodb query object>
        /api/auth/check Check
        /api/auth/userdata None ?id=<user id> ?username=<string>
        /api/auth/follow User ?id=<user id> ?username=<string>
        /api/auth/unfollow User ?id=<user id> ?username=<string>
        /api/auth/verify/email None ?id=<token>
        /notification/<index:int> User
    [POST]
        /api/auth/register None { username: <string>, password: <string> }
        /api/auth/login None { username: <string>, password: <string> }
        /api/auth/changePassword User { currentPassword: <string>, newPassword: <string> }
        /api/auth/verify/send User { email: <string> }
        /api/auth/resetPassword/send None { email: <string> }
        /api/auth/resetPassword/reset None { id: <token>, password: <string> }
    [PUT]
        /api/auth/update User { username: <string>, avatar: <url>, banner: <url>, biography: <string>, mature: <bool> }
        /api/auth/updateRole Admin { role: <role>, id: <user id> }

Project API
    [DELETE]
        /api/project/delete/<id:project id> User
        /api/project/comment/<id:project id>/delete User { index: <int> }
    [GET]
        /api/project/list ?(poster)=<string>&(platform)=<string>&(postedBefore)=<int>&(postedAfter)=<int>&(includeTags)=[<string>]&(excludeTags)=[<string>]&(featured)=<bool>&(showMature)=<bool>&(showHidden)=<bool>&(recipient)=<string>&(customQuery)=<mongodb query object>
        /api/project/search ?query=<string>&(showMature)=<bool>&(showHidden)=<bool>
        /api/project/data/<id:project id> this.data.bind(this));
        /api/project/delete/<id:project id> User
        /api/project/favorite/<id:project id> User
        /api/project/unfavorite/<id:project id> User
        /api/project/feature/<id:project id> Admin
        /api/project/unfeature/<id:project id> Admin
        /api/project/comment/<id:project id>/upvote User ?index=<int>
        /api/project/comment/<id:project id>/downvote User ?index=<int>
    [POST]
        /api/project/publish User { title: <string>, link: <url>, content: <string>, thumbnail: <url>, tags: [ <string> ], mature: <bool>, hidden: <bool>, privateRecipients: [ <user id> ], platform: <string> }
        /api/project/comment/<id:project id> User { content: <string> }
    [PUT]
        /api/project/update/<id:project id> User { title: <string>, link: <url>, content: <string>, thumbnail: <url>, tags: [ <string> ], mature: <bool>, hidden: <bool>, privateRecipients: [ <user id> ], platform: <string> }
        /api/project/comment/<id:project id>/edit User  { content: <string>, index: <int> }

Forum API
    [DELETE]
        /api/forum/delete/<id:post id> User
        /api/forum/comment/<id:post id>/delete User { index: <int> }
    [GET]
        /api/forum/list None ?(poster)=<string>&(platform)=<string>&(postedBefore)=<int>&(postedAfter)=<int>&(includeTags)=[<string>]&(excludeTags)=[<string>]&(featured)=<bool>&(showMature)=<bool>&(showHidden)=<bool>&(recipient)=<string>&(customQuery)=<mongodb query object>
        /api/forum/search ?query=<string>&(showMature)=<bool>&(showHidden)=<bool>
        /api/forum/data/<id:post id> None
        /api/forum/delete/<id:post id> User
        /api/forum/feature/<id:post id> Admin
        /api/forum/unfeature/<id:post id> Admin
        /api/forum/comment/<id:post id>/upvote User ?index=<int>
        /api/forum/comment/<id:post id>/downvote User ?index=<int>
    [POST]
        /api/forum/publish User { title: <string>, content: <string>, tags: [ <string> ], mature: <bool>, hidden: <bool>, privateRecipients: [ <user id> ] }
        /api/forum/comment/<id:post id> User { content: <string> }
    [PUT]
        /api/forum/update/<id:post id> User { title: <string>, content: <string>, tags: [ <string> ], mature: <bool>, hidden: <bool>, privateRecipients: [ <user id> ] }
        /api/forum/comment/<id:post id>/edit User  { content: <string>, index: <int> }

Media API
    [GET]
        /api/media/get/<id:media id>/<string> None
        /api/media/list None ?(poster)=<user id>&(customQuery)=<mongodb query object>
    [POST]
        /api/media/upload User
